import java.nio.file.Paths

// project plugins
plugins {
  id 'java'
}

// dependencies repositories
repositories {
  mavenCentral()
  flatDir {
    dirs 'lib'
  }
}

// compile and test dependencies
dependencies {
  implementation name: 'java-cup-11b'
  implementation 'com.jfoenix:jfoenix:8.0.8'
  implementation 'org.fxmisc.richtext:richtextfx:0.9.2'
  testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.2'
  testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.2'
  testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
}

// Java target version
sourceCompatibility = 1.8

// jar distribution file
version = '2.0.2'
archivesBaseName = 'V-Sim'
jar {
  manifest {
    attributes (
      'Main-Class': 'vsim.VSim',
      'Implementation-Title': 'V-Sim',
      'Implementation-Version': version
    )
  }
  // create fat jar
  from {
    configurations.runtimeClasspath.collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }
}

// test config
test {
  useJUnitPlatform()
  dependsOn 'cleanTest'
  testLogging {
    events "passed", "skipped", "failed"
  }
}

// create a task for running riscv-tests
task riscv_tests(type: Exec) {
  workingDir '.'
  commandLine 'python3', 'test.py'
}

// execute this task after creating the jar distribution file
riscv_tests.dependsOn(jar)

// run riscv_tests task after test task
test.finalizedBy(riscv_tests)

// compile java source code in UTF-8
compileJava.options.encoding = 'UTF-8'
